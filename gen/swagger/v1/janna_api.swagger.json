{
  "swagger": "2.0",
  "info": {
    "title": "Janna service",
    "version": "1.0",
    "contact": {
      "name": "Vyacheslav Terdunov",
      "url": "https://github.com/vterdunov/janna"
    }
  },
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/info": {
      "get": {
        "summary": "Get the application build information.",
        "operationId": "AppInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AppInfoResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "tags": [
          "JannaAPI"
        ]
      }
    },
    "/v1/openapi": {
      "get": {
        "summary": "Get the application API in OpenAPI format.",
        "operationId": "OpenApi",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OpenApiResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "tags": [
          "JannaAPI"
        ]
      }
    },
    "/v1/tasks/{task_id}": {
      "get": {
        "summary": "Get a task status.",
        "operationId": "TaskStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TaskStatusResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "JannaAPI"
        ]
      }
    },
    "/v1/vcenter/vms": {
      "get": {
        "summary": "Virtual Machines list.",
        "operationId": "VMList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1VMListResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "datacenter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "folder",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resource_pool",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "JannaAPI"
        ]
      },
      "post": {
        "summary": "Deploy Virtual Machine.",
        "operationId": "VMDeploy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1VMDeployResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1VMDeployRequest"
            }
          }
        ],
        "tags": [
          "JannaAPI"
        ]
      }
    },
    "/v1/vcenter/vms/{vm_uuid}": {
      "get": {
        "summary": "Get a Virtual Machine information by its UUID.",
        "operationId": "VMInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1VMInfoResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "vm_uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "datacenter",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "JannaAPI"
        ]
      }
    },
    "/v1/vcenter/vms/{vm_uuid}/power": {
      "patch": {
        "summary": "Change Virtual Machine power state.",
        "operationId": "VMPower",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1VMPowerResponse"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "format": "string"
            }
          }
        },
        "parameters": [
          {
            "name": "vm_uuid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VMPowerRequestVMPowerRequestBody"
            }
          }
        ],
        "tags": [
          "JannaAPI"
        ]
      }
    }
  },
  "definitions": {
    "VMDeployRequestComputerResources": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/VMDeployRequestComputerResourcesType"
        },
        "path": {
          "type": "string"
        }
      },
      "description": "Describes a computer resource. Such as single host or cluster."
    },
    "VMDeployRequestComputerResourcesType": {
      "type": "string",
      "enum": [
        "TYPE_INVALID",
        "TYPE_HOST",
        "TYPE_CLUSTER",
        "TYPE_RP"
      ],
      "default": "TYPE_INVALID",
      "description": "Computer Resource Type.\n\n - TYPE_INVALID: zero value\n - TYPE_HOST: host\n - TYPE_CLUSTER: cluster\n - TYPE_RP: resource pool"
    },
    "VMDeployRequestDatastore": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/VMDeployRequestDatastoreType"
        },
        "names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Describe a datastore."
    },
    "VMDeployRequestDatastoreType": {
      "type": "string",
      "enum": [
        "TYPE_INVALID",
        "TYPE_CLUSTER",
        "TYPE_DATASTORE"
      ],
      "default": "TYPE_INVALID",
      "description": "Storage type. If 'cluster' type was chosen then Janna try to get DRS recommendation to choose proper 'datastore'.\n\n - TYPE_INVALID: zero value\n - TYPE_CLUSTER: cluster. DRS will be applied.\n - TYPE_DATASTORE: single datastore."
    },
    "VMInfoGuest": {
      "type": "object",
      "properties": {
        "tools_status": {
          "type": "string"
        }
      },
      "description": "Guest."
    },
    "VMInfoRuntime": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        }
      },
      "description": "Runtime."
    },
    "VMInfoSummary": {
      "type": "object",
      "description": "Summary."
    },
    "VMPowerRequestVMPowerRequestBody": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "datacenter": {
          "type": "string"
        }
      },
      "description": "VMPowerRequestBody is a body of the request."
    },
    "v1AppInfoResponse": {
      "type": "object",
      "properties": {
        "commit": {
          "type": "string"
        },
        "build_time": {
          "type": "string"
        }
      }
    },
    "v1IPAddresses": {
      "type": "object",
      "properties": {
        "ip_addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "IPAddresses a list of Virtual Machine IP addresses."
    },
    "v1OpenApiResponse": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "v1PowerState": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1PowerStateType"
        }
      },
      "description": "PowerState describes a Virtual Machine power state."
    },
    "v1PowerStateType": {
      "type": "string",
      "enum": [
        "TYPE_INVALID",
        "TYPE_POWERED_ON",
        "TYPE_POWERED_OFF",
        "TYPE_SUSPENDED"
      ],
      "default": "TYPE_INVALID",
      "description": "Storage type. If 'cluster' type was chosen then Janna try to get DRS recommendation to choose proper 'datastore'.\n\n - TYPE_INVALID: zero value\n - TYPE_POWERED_ON: powered on\n - TYPE_POWERED_OFF: powered off\n - TYPE_SUSPENDED: suspended"
    },
    "v1TaskStatusResponse": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "ip_addresses": {
          "$ref": "#/definitions/v1IPAddresses"
        },
        "vm_short_info": {
          "$ref": "#/definitions/v1VMShortInfo"
        },
        "vm_info": {
          "$ref": "#/definitions/v1VMInfo"
        }
      },
      "description": "TaskStatusResponse returns on of the following structured responses."
    },
    "v1VMDeployRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "ova_url": {
          "type": "string"
        },
        "datacenter": {
          "type": "string"
        },
        "folder": {
          "type": "string"
        },
        "annotation": {
          "type": "string"
        },
        "networks": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "\"OVF network\": \"ESXi network\""
        },
        "datastores": {
          "$ref": "#/definitions/VMDeployRequestDatastore"
        },
        "computer_resources": {
          "$ref": "#/definitions/VMDeployRequestComputerResources"
        }
      }
    },
    "v1VMDeployResponse": {
      "type": "object",
      "properties": {
        "task_id": {
          "type": "string"
        }
      }
    },
    "v1VMInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "config": {
          "$ref": "#/definitions/v1VMInfoConfig"
        },
        "runtime": {
          "$ref": "#/definitions/VMInfoRuntime"
        },
        "guest": {
          "$ref": "#/definitions/VMInfoGuest"
        },
        "summary": {
          "$ref": "#/definitions/VMInfoSummary"
        },
        "datastore": {
          "type": "string"
        },
        "network": {
          "type": "string"
        },
        "guest_heartbeat_status": {
          "type": "string"
        }
      },
      "description": "VMInfo keeps data about a Virtual Machine."
    },
    "v1VMInfoConfig": {
      "type": "object",
      "properties": {
        "change_version": {
          "type": "string"
        }
      },
      "description": "Config."
    },
    "v1VMInfoResponse": {
      "type": "object",
      "properties": {
        "task_id": {
          "type": "string"
        }
      }
    },
    "v1VMListResponse": {
      "type": "object",
      "properties": {
        "task_id": {
          "type": "string"
        }
      }
    },
    "v1VMPowerResponse": {
      "type": "object",
      "properties": {
        "task_id": {
          "type": "string"
        }
      }
    },
    "v1VMShortInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "power_state": {
          "$ref": "#/definitions/v1PowerState"
        },
        "ip_addresses": {
          "$ref": "#/definitions/v1IPAddresses"
        },
        "cpu_count": {
          "type": "integer",
          "format": "int32"
        },
        "memory_size_mib": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "VMShortInfo keeps commonly used information about a Virtual Machine."
    }
  }
}
