// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1/janna_api.proto

package apiv1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Storage type. If 'cluster' type was chosen then Janna try to get DRS recommendation to choose proper 'datastore'.
type VMDeployRequest_Datastore_Type int32

const (
	// zero value
	VMDeployRequest_Datastore_TYPE_INVALID VMDeployRequest_Datastore_Type = 0
	// cluster. DRS will be applied.
	VMDeployRequest_Datastore_TYPE_CLUSTER VMDeployRequest_Datastore_Type = 1
	// single datastore.
	VMDeployRequest_Datastore_TYPE_DATASTORE VMDeployRequest_Datastore_Type = 2
)

var VMDeployRequest_Datastore_Type_name = map[int32]string{
	0: "TYPE_INVALID",
	1: "TYPE_CLUSTER",
	2: "TYPE_DATASTORE",
}

var VMDeployRequest_Datastore_Type_value = map[string]int32{
	"TYPE_INVALID":   0,
	"TYPE_CLUSTER":   1,
	"TYPE_DATASTORE": 2,
}

func (x VMDeployRequest_Datastore_Type) String() string {
	return proto.EnumName(VMDeployRequest_Datastore_Type_name, int32(x))
}

func (VMDeployRequest_Datastore_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6c929af3cc935ee9, []int{4, 1, 0}
}

// Computer Resource Type.
type VMDeployRequest_ComputerResources_Type int32

const (
	// zero value
	VMDeployRequest_ComputerResources_TYPE_INVALID VMDeployRequest_ComputerResources_Type = 0
	// host
	VMDeployRequest_ComputerResources_TYPE_HOST VMDeployRequest_ComputerResources_Type = 1
	// cluster
	VMDeployRequest_ComputerResources_TYPE_CLUSTER VMDeployRequest_ComputerResources_Type = 2
	// resource pool
	VMDeployRequest_ComputerResources_TYPE_RP VMDeployRequest_ComputerResources_Type = 3
)

var VMDeployRequest_ComputerResources_Type_name = map[int32]string{
	0: "TYPE_INVALID",
	1: "TYPE_HOST",
	2: "TYPE_CLUSTER",
	3: "TYPE_RP",
}

var VMDeployRequest_ComputerResources_Type_value = map[string]int32{
	"TYPE_INVALID": 0,
	"TYPE_HOST":    1,
	"TYPE_CLUSTER": 2,
	"TYPE_RP":      3,
}

func (x VMDeployRequest_ComputerResources_Type) String() string {
	return proto.EnumName(VMDeployRequest_ComputerResources_Type_name, int32(x))
}

func (VMDeployRequest_ComputerResources_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6c929af3cc935ee9, []int{4, 2, 0}
}

type AppInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppInfoRequest) Reset()         { *m = AppInfoRequest{} }
func (m *AppInfoRequest) String() string { return proto.CompactTextString(m) }
func (*AppInfoRequest) ProtoMessage()    {}
func (*AppInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c929af3cc935ee9, []int{0}
}

func (m *AppInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppInfoRequest.Unmarshal(m, b)
}
func (m *AppInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppInfoRequest.Marshal(b, m, deterministic)
}
func (m *AppInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppInfoRequest.Merge(m, src)
}
func (m *AppInfoRequest) XXX_Size() int {
	return xxx_messageInfo_AppInfoRequest.Size(m)
}
func (m *AppInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AppInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AppInfoRequest proto.InternalMessageInfo

type AppInfoResponse struct {
	Commit               string   `protobuf:"bytes,1,opt,name=commit,proto3" json:"commit,omitempty"`
	BuildTime            string   `protobuf:"bytes,2,opt,name=build_time,json=buildTime,proto3" json:"build_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppInfoResponse) Reset()         { *m = AppInfoResponse{} }
func (m *AppInfoResponse) String() string { return proto.CompactTextString(m) }
func (*AppInfoResponse) ProtoMessage()    {}
func (*AppInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c929af3cc935ee9, []int{1}
}

func (m *AppInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppInfoResponse.Unmarshal(m, b)
}
func (m *AppInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppInfoResponse.Marshal(b, m, deterministic)
}
func (m *AppInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppInfoResponse.Merge(m, src)
}
func (m *AppInfoResponse) XXX_Size() int {
	return xxx_messageInfo_AppInfoResponse.Size(m)
}
func (m *AppInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AppInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AppInfoResponse proto.InternalMessageInfo

func (m *AppInfoResponse) GetCommit() string {
	if m != nil {
		return m.Commit
	}
	return ""
}

func (m *AppInfoResponse) GetBuildTime() string {
	if m != nil {
		return m.BuildTime
	}
	return ""
}

type VMInfoRequest struct {
	VmUuid               string   `protobuf:"bytes,1,opt,name=vm_uuid,json=vmUuid,proto3" json:"vm_uuid,omitempty"`
	Datacenter           string   `protobuf:"bytes,2,opt,name=datacenter,proto3" json:"datacenter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VMInfoRequest) Reset()         { *m = VMInfoRequest{} }
func (m *VMInfoRequest) String() string { return proto.CompactTextString(m) }
func (*VMInfoRequest) ProtoMessage()    {}
func (*VMInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c929af3cc935ee9, []int{2}
}

func (m *VMInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VMInfoRequest.Unmarshal(m, b)
}
func (m *VMInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VMInfoRequest.Marshal(b, m, deterministic)
}
func (m *VMInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VMInfoRequest.Merge(m, src)
}
func (m *VMInfoRequest) XXX_Size() int {
	return xxx_messageInfo_VMInfoRequest.Size(m)
}
func (m *VMInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VMInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VMInfoRequest proto.InternalMessageInfo

func (m *VMInfoRequest) GetVmUuid() string {
	if m != nil {
		return m.VmUuid
	}
	return ""
}

func (m *VMInfoRequest) GetDatacenter() string {
	if m != nil {
		return m.Datacenter
	}
	return ""
}

type VMInfoResponse struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VMInfoResponse) Reset()         { *m = VMInfoResponse{} }
func (m *VMInfoResponse) String() string { return proto.CompactTextString(m) }
func (*VMInfoResponse) ProtoMessage()    {}
func (*VMInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c929af3cc935ee9, []int{3}
}

func (m *VMInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VMInfoResponse.Unmarshal(m, b)
}
func (m *VMInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VMInfoResponse.Marshal(b, m, deterministic)
}
func (m *VMInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VMInfoResponse.Merge(m, src)
}
func (m *VMInfoResponse) XXX_Size() int {
	return xxx_messageInfo_VMInfoResponse.Size(m)
}
func (m *VMInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VMInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VMInfoResponse proto.InternalMessageInfo

func (m *VMInfoResponse) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type VMDeployRequest struct {
	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	OvaUrl     string `protobuf:"bytes,2,opt,name=ova_url,json=ovaUrl,proto3" json:"ova_url,omitempty"`
	Datacenter string `protobuf:"bytes,3,opt,name=datacenter,proto3" json:"datacenter,omitempty"`
	Folder     string `protobuf:"bytes,4,opt,name=folder,proto3" json:"folder,omitempty"`
	Annotation string `protobuf:"bytes,5,opt,name=annotation,proto3" json:"annotation,omitempty"`
	// "OVF network": "ESXi network"
	Networks             map[string]string                  `protobuf:"bytes,10,rep,name=networks,proto3" json:"networks,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Datastores           *VMDeployRequest_Datastore         `protobuf:"bytes,11,opt,name=datastores,proto3" json:"datastores,omitempty"`
	ComputerResources    *VMDeployRequest_ComputerResources `protobuf:"bytes,12,opt,name=computer_resources,json=computerResources,proto3" json:"computer_resources,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *VMDeployRequest) Reset()         { *m = VMDeployRequest{} }
func (m *VMDeployRequest) String() string { return proto.CompactTextString(m) }
func (*VMDeployRequest) ProtoMessage()    {}
func (*VMDeployRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c929af3cc935ee9, []int{4}
}

func (m *VMDeployRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VMDeployRequest.Unmarshal(m, b)
}
func (m *VMDeployRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VMDeployRequest.Marshal(b, m, deterministic)
}
func (m *VMDeployRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VMDeployRequest.Merge(m, src)
}
func (m *VMDeployRequest) XXX_Size() int {
	return xxx_messageInfo_VMDeployRequest.Size(m)
}
func (m *VMDeployRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VMDeployRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VMDeployRequest proto.InternalMessageInfo

func (m *VMDeployRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VMDeployRequest) GetOvaUrl() string {
	if m != nil {
		return m.OvaUrl
	}
	return ""
}

func (m *VMDeployRequest) GetDatacenter() string {
	if m != nil {
		return m.Datacenter
	}
	return ""
}

func (m *VMDeployRequest) GetFolder() string {
	if m != nil {
		return m.Folder
	}
	return ""
}

func (m *VMDeployRequest) GetAnnotation() string {
	if m != nil {
		return m.Annotation
	}
	return ""
}

func (m *VMDeployRequest) GetNetworks() map[string]string {
	if m != nil {
		return m.Networks
	}
	return nil
}

func (m *VMDeployRequest) GetDatastores() *VMDeployRequest_Datastore {
	if m != nil {
		return m.Datastores
	}
	return nil
}

func (m *VMDeployRequest) GetComputerResources() *VMDeployRequest_ComputerResources {
	if m != nil {
		return m.ComputerResources
	}
	return nil
}

// Describe a datastore.
type VMDeployRequest_Datastore struct {
	Type                 VMDeployRequest_Datastore_Type `protobuf:"varint,1,opt,name=type,proto3,enum=api.v1.VMDeployRequest_Datastore_Type" json:"type,omitempty"`
	Names                []string                       `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *VMDeployRequest_Datastore) Reset()         { *m = VMDeployRequest_Datastore{} }
func (m *VMDeployRequest_Datastore) String() string { return proto.CompactTextString(m) }
func (*VMDeployRequest_Datastore) ProtoMessage()    {}
func (*VMDeployRequest_Datastore) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c929af3cc935ee9, []int{4, 1}
}

func (m *VMDeployRequest_Datastore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VMDeployRequest_Datastore.Unmarshal(m, b)
}
func (m *VMDeployRequest_Datastore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VMDeployRequest_Datastore.Marshal(b, m, deterministic)
}
func (m *VMDeployRequest_Datastore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VMDeployRequest_Datastore.Merge(m, src)
}
func (m *VMDeployRequest_Datastore) XXX_Size() int {
	return xxx_messageInfo_VMDeployRequest_Datastore.Size(m)
}
func (m *VMDeployRequest_Datastore) XXX_DiscardUnknown() {
	xxx_messageInfo_VMDeployRequest_Datastore.DiscardUnknown(m)
}

var xxx_messageInfo_VMDeployRequest_Datastore proto.InternalMessageInfo

func (m *VMDeployRequest_Datastore) GetType() VMDeployRequest_Datastore_Type {
	if m != nil {
		return m.Type
	}
	return VMDeployRequest_Datastore_TYPE_INVALID
}

func (m *VMDeployRequest_Datastore) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

// Describes a computer resource. Such as single host or cluster.
type VMDeployRequest_ComputerResources struct {
	Type                 VMDeployRequest_ComputerResources_Type `protobuf:"varint,1,opt,name=type,proto3,enum=api.v1.VMDeployRequest_ComputerResources_Type" json:"type,omitempty"`
	Path                 string                                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *VMDeployRequest_ComputerResources) Reset()         { *m = VMDeployRequest_ComputerResources{} }
func (m *VMDeployRequest_ComputerResources) String() string { return proto.CompactTextString(m) }
func (*VMDeployRequest_ComputerResources) ProtoMessage()    {}
func (*VMDeployRequest_ComputerResources) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c929af3cc935ee9, []int{4, 2}
}

func (m *VMDeployRequest_ComputerResources) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VMDeployRequest_ComputerResources.Unmarshal(m, b)
}
func (m *VMDeployRequest_ComputerResources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VMDeployRequest_ComputerResources.Marshal(b, m, deterministic)
}
func (m *VMDeployRequest_ComputerResources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VMDeployRequest_ComputerResources.Merge(m, src)
}
func (m *VMDeployRequest_ComputerResources) XXX_Size() int {
	return xxx_messageInfo_VMDeployRequest_ComputerResources.Size(m)
}
func (m *VMDeployRequest_ComputerResources) XXX_DiscardUnknown() {
	xxx_messageInfo_VMDeployRequest_ComputerResources.DiscardUnknown(m)
}

var xxx_messageInfo_VMDeployRequest_ComputerResources proto.InternalMessageInfo

func (m *VMDeployRequest_ComputerResources) GetType() VMDeployRequest_ComputerResources_Type {
	if m != nil {
		return m.Type
	}
	return VMDeployRequest_ComputerResources_TYPE_INVALID
}

func (m *VMDeployRequest_ComputerResources) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type VMDeployResponse struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VMDeployResponse) Reset()         { *m = VMDeployResponse{} }
func (m *VMDeployResponse) String() string { return proto.CompactTextString(m) }
func (*VMDeployResponse) ProtoMessage()    {}
func (*VMDeployResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c929af3cc935ee9, []int{5}
}

func (m *VMDeployResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VMDeployResponse.Unmarshal(m, b)
}
func (m *VMDeployResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VMDeployResponse.Marshal(b, m, deterministic)
}
func (m *VMDeployResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VMDeployResponse.Merge(m, src)
}
func (m *VMDeployResponse) XXX_Size() int {
	return xxx_messageInfo_VMDeployResponse.Size(m)
}
func (m *VMDeployResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VMDeployResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VMDeployResponse proto.InternalMessageInfo

func (m *VMDeployResponse) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type VMPowerRequest struct {
	VmUuid               string                             `protobuf:"bytes,1,opt,name=vm_uuid,json=vmUuid,proto3" json:"vm_uuid,omitempty"`
	VmPowerRequestBody   *VMPowerRequest_VMPowerRequestBody `protobuf:"bytes,2,opt,name=vm_power_request_body,json=vmPowerRequestBody,proto3" json:"vm_power_request_body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *VMPowerRequest) Reset()         { *m = VMPowerRequest{} }
func (m *VMPowerRequest) String() string { return proto.CompactTextString(m) }
func (*VMPowerRequest) ProtoMessage()    {}
func (*VMPowerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c929af3cc935ee9, []int{6}
}

func (m *VMPowerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VMPowerRequest.Unmarshal(m, b)
}
func (m *VMPowerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VMPowerRequest.Marshal(b, m, deterministic)
}
func (m *VMPowerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VMPowerRequest.Merge(m, src)
}
func (m *VMPowerRequest) XXX_Size() int {
	return xxx_messageInfo_VMPowerRequest.Size(m)
}
func (m *VMPowerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VMPowerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VMPowerRequest proto.InternalMessageInfo

func (m *VMPowerRequest) GetVmUuid() string {
	if m != nil {
		return m.VmUuid
	}
	return ""
}

func (m *VMPowerRequest) GetVmPowerRequestBody() *VMPowerRequest_VMPowerRequestBody {
	if m != nil {
		return m.VmPowerRequestBody
	}
	return nil
}

// VMPowerRequestBody is a body of the request.
type VMPowerRequest_VMPowerRequestBody struct {
	State                string   `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Datacenter           string   `protobuf:"bytes,2,opt,name=datacenter,proto3" json:"datacenter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VMPowerRequest_VMPowerRequestBody) Reset()         { *m = VMPowerRequest_VMPowerRequestBody{} }
func (m *VMPowerRequest_VMPowerRequestBody) String() string { return proto.CompactTextString(m) }
func (*VMPowerRequest_VMPowerRequestBody) ProtoMessage()    {}
func (*VMPowerRequest_VMPowerRequestBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c929af3cc935ee9, []int{6, 0}
}

func (m *VMPowerRequest_VMPowerRequestBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VMPowerRequest_VMPowerRequestBody.Unmarshal(m, b)
}
func (m *VMPowerRequest_VMPowerRequestBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VMPowerRequest_VMPowerRequestBody.Marshal(b, m, deterministic)
}
func (m *VMPowerRequest_VMPowerRequestBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VMPowerRequest_VMPowerRequestBody.Merge(m, src)
}
func (m *VMPowerRequest_VMPowerRequestBody) XXX_Size() int {
	return xxx_messageInfo_VMPowerRequest_VMPowerRequestBody.Size(m)
}
func (m *VMPowerRequest_VMPowerRequestBody) XXX_DiscardUnknown() {
	xxx_messageInfo_VMPowerRequest_VMPowerRequestBody.DiscardUnknown(m)
}

var xxx_messageInfo_VMPowerRequest_VMPowerRequestBody proto.InternalMessageInfo

func (m *VMPowerRequest_VMPowerRequestBody) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *VMPowerRequest_VMPowerRequestBody) GetDatacenter() string {
	if m != nil {
		return m.Datacenter
	}
	return ""
}

type VMPowerResponse struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VMPowerResponse) Reset()         { *m = VMPowerResponse{} }
func (m *VMPowerResponse) String() string { return proto.CompactTextString(m) }
func (*VMPowerResponse) ProtoMessage()    {}
func (*VMPowerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c929af3cc935ee9, []int{7}
}

func (m *VMPowerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VMPowerResponse.Unmarshal(m, b)
}
func (m *VMPowerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VMPowerResponse.Marshal(b, m, deterministic)
}
func (m *VMPowerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VMPowerResponse.Merge(m, src)
}
func (m *VMPowerResponse) XXX_Size() int {
	return xxx_messageInfo_VMPowerResponse.Size(m)
}
func (m *VMPowerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VMPowerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VMPowerResponse proto.InternalMessageInfo

func (m *VMPowerResponse) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type VMListRequest struct {
	Datacenter           string   `protobuf:"bytes,1,opt,name=datacenter,proto3" json:"datacenter,omitempty"`
	Folder               string   `protobuf:"bytes,2,opt,name=folder,proto3" json:"folder,omitempty"`
	ResourcePool         string   `protobuf:"bytes,3,opt,name=resource_pool,json=resourcePool,proto3" json:"resource_pool,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VMListRequest) Reset()         { *m = VMListRequest{} }
func (m *VMListRequest) String() string { return proto.CompactTextString(m) }
func (*VMListRequest) ProtoMessage()    {}
func (*VMListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c929af3cc935ee9, []int{8}
}

func (m *VMListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VMListRequest.Unmarshal(m, b)
}
func (m *VMListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VMListRequest.Marshal(b, m, deterministic)
}
func (m *VMListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VMListRequest.Merge(m, src)
}
func (m *VMListRequest) XXX_Size() int {
	return xxx_messageInfo_VMListRequest.Size(m)
}
func (m *VMListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VMListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VMListRequest proto.InternalMessageInfo

func (m *VMListRequest) GetDatacenter() string {
	if m != nil {
		return m.Datacenter
	}
	return ""
}

func (m *VMListRequest) GetFolder() string {
	if m != nil {
		return m.Folder
	}
	return ""
}

func (m *VMListRequest) GetResourcePool() string {
	if m != nil {
		return m.ResourcePool
	}
	return ""
}

type VMListResponse struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VMListResponse) Reset()         { *m = VMListResponse{} }
func (m *VMListResponse) String() string { return proto.CompactTextString(m) }
func (*VMListResponse) ProtoMessage()    {}
func (*VMListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c929af3cc935ee9, []int{9}
}

func (m *VMListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VMListResponse.Unmarshal(m, b)
}
func (m *VMListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VMListResponse.Marshal(b, m, deterministic)
}
func (m *VMListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VMListResponse.Merge(m, src)
}
func (m *VMListResponse) XXX_Size() int {
	return xxx_messageInfo_VMListResponse.Size(m)
}
func (m *VMListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VMListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VMListResponse proto.InternalMessageInfo

func (m *VMListResponse) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type TaskStatusRequest struct {
	TaskId               string   `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskStatusRequest) Reset()         { *m = TaskStatusRequest{} }
func (m *TaskStatusRequest) String() string { return proto.CompactTextString(m) }
func (*TaskStatusRequest) ProtoMessage()    {}
func (*TaskStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c929af3cc935ee9, []int{10}
}

func (m *TaskStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskStatusRequest.Unmarshal(m, b)
}
func (m *TaskStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskStatusRequest.Marshal(b, m, deterministic)
}
func (m *TaskStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskStatusRequest.Merge(m, src)
}
func (m *TaskStatusRequest) XXX_Size() int {
	return xxx_messageInfo_TaskStatusRequest.Size(m)
}
func (m *TaskStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskStatusRequest proto.InternalMessageInfo

func (m *TaskStatusRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type TaskStatusResponse struct {
	Status               string          `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message              string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Result               *_struct.Struct `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TaskStatusResponse) Reset()         { *m = TaskStatusResponse{} }
func (m *TaskStatusResponse) String() string { return proto.CompactTextString(m) }
func (*TaskStatusResponse) ProtoMessage()    {}
func (*TaskStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_6c929af3cc935ee9, []int{11}
}

func (m *TaskStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskStatusResponse.Unmarshal(m, b)
}
func (m *TaskStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskStatusResponse.Marshal(b, m, deterministic)
}
func (m *TaskStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskStatusResponse.Merge(m, src)
}
func (m *TaskStatusResponse) XXX_Size() int {
	return xxx_messageInfo_TaskStatusResponse.Size(m)
}
func (m *TaskStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TaskStatusResponse proto.InternalMessageInfo

func (m *TaskStatusResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *TaskStatusResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TaskStatusResponse) GetResult() *_struct.Struct {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterEnum("api.v1.VMDeployRequest_Datastore_Type", VMDeployRequest_Datastore_Type_name, VMDeployRequest_Datastore_Type_value)
	proto.RegisterEnum("api.v1.VMDeployRequest_ComputerResources_Type", VMDeployRequest_ComputerResources_Type_name, VMDeployRequest_ComputerResources_Type_value)
	proto.RegisterType((*AppInfoRequest)(nil), "api.v1.AppInfoRequest")
	proto.RegisterType((*AppInfoResponse)(nil), "api.v1.AppInfoResponse")
	proto.RegisterType((*VMInfoRequest)(nil), "api.v1.VMInfoRequest")
	proto.RegisterType((*VMInfoResponse)(nil), "api.v1.VMInfoResponse")
	proto.RegisterType((*VMDeployRequest)(nil), "api.v1.VMDeployRequest")
	proto.RegisterMapType((map[string]string)(nil), "api.v1.VMDeployRequest.NetworksEntry")
	proto.RegisterType((*VMDeployRequest_Datastore)(nil), "api.v1.VMDeployRequest.Datastore")
	proto.RegisterType((*VMDeployRequest_ComputerResources)(nil), "api.v1.VMDeployRequest.ComputerResources")
	proto.RegisterType((*VMDeployResponse)(nil), "api.v1.VMDeployResponse")
	proto.RegisterType((*VMPowerRequest)(nil), "api.v1.VMPowerRequest")
	proto.RegisterType((*VMPowerRequest_VMPowerRequestBody)(nil), "api.v1.VMPowerRequest.VMPowerRequestBody")
	proto.RegisterType((*VMPowerResponse)(nil), "api.v1.VMPowerResponse")
	proto.RegisterType((*VMListRequest)(nil), "api.v1.VMListRequest")
	proto.RegisterType((*VMListResponse)(nil), "api.v1.VMListResponse")
	proto.RegisterType((*TaskStatusRequest)(nil), "api.v1.TaskStatusRequest")
	proto.RegisterType((*TaskStatusResponse)(nil), "api.v1.TaskStatusResponse")
}

func init() { proto.RegisterFile("v1/janna_api.proto", fileDescriptor_6c929af3cc935ee9) }

var fileDescriptor_6c929af3cc935ee9 = []byte{
	// 1128 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0x4f, 0x6f, 0xe3, 0x44,
	0x14, 0xc7, 0x49, 0x9a, 0xb4, 0xaf, 0xff, 0xd2, 0x29, 0x6d, 0xb2, 0xe1, 0x8f, 0x8c, 0x11, 0xa8,
	0x5b, 0x76, 0xed, 0x26, 0x54, 0x08, 0xb2, 0x12, 0x52, 0xba, 0x2d, 0x6a, 0x57, 0xdd, 0x6d, 0x70,
	0xd3, 0xa8, 0xa0, 0x95, 0x82, 0xeb, 0x4c, 0x13, 0x6f, 0x6d, 0x8f, 0xf1, 0x8c, 0x5d, 0xa2, 0xd5,
	0x5e, 0xb8, 0x71, 0x85, 0x1b, 0x12, 0x42, 0xe2, 0xc8, 0x15, 0xf1, 0x25, 0xb8, 0xee, 0x57, 0xe0,
	0x2b, 0x70, 0x47, 0x33, 0x1e, 0x37, 0xff, 0x5a, 0xc2, 0x29, 0xf3, 0x7e, 0xf3, 0xde, 0x6f, 0x7e,
	0x7e, 0x33, 0xef, 0xbd, 0x00, 0x8a, 0xab, 0xc6, 0x0b, 0xcb, 0xf7, 0xad, 0x8e, 0x15, 0x38, 0x7a,
	0x10, 0x12, 0x46, 0x50, 0x9e, 0x2f, 0xe3, 0x6a, 0xe5, 0xed, 0x1e, 0x21, 0x3d, 0x17, 0x1b, 0x56,
	0xe0, 0x18, 0x96, 0xef, 0x13, 0x66, 0x31, 0x87, 0xf8, 0x34, 0xf1, 0xba, 0xd9, 0x15, 0xd6, 0x45,
	0x74, 0x69, 0x50, 0x16, 0x46, 0x36, 0x93, 0xbb, 0x0f, 0xc4, 0x8f, 0xfd, 0xb0, 0x87, 0xfd, 0x87,
	0xf4, 0xda, 0xea, 0xf5, 0x70, 0x68, 0x90, 0x40, 0xc4, 0x4f, 0x73, 0x69, 0x45, 0x58, 0x69, 0x04,
	0xc1, 0x91, 0x7f, 0x49, 0x4c, 0xfc, 0x6d, 0x84, 0x29, 0xd3, 0x0e, 0x61, 0xf5, 0x06, 0xa1, 0x01,
	0xf1, 0x29, 0x46, 0x9b, 0x90, 0xb7, 0x89, 0xe7, 0x39, 0xac, 0xac, 0xa8, 0xca, 0xd6, 0x82, 0x29,
	0x2d, 0xf4, 0x0e, 0xc0, 0x45, 0xe4, 0xb8, 0xdd, 0x0e, 0x73, 0x3c, 0x5c, 0xce, 0x88, 0xbd, 0x05,
	0x81, 0xb4, 0x1c, 0x0f, 0x6b, 0x87, 0xb0, 0xdc, 0x7e, 0x3a, 0x42, 0x8d, 0x4a, 0x50, 0x88, 0xbd,
	0x4e, 0x14, 0x39, 0xdd, 0x94, 0x28, 0xf6, 0xce, 0x22, 0xa7, 0x8b, 0xde, 0x05, 0xe8, 0x5a, 0xcc,
	0xb2, 0xb1, 0xcf, 0x70, 0x28, 0x89, 0x46, 0x10, 0xed, 0x3e, 0xac, 0xa4, 0x4c, 0x52, 0x52, 0x09,
	0x0a, 0xcc, 0xa2, 0x57, 0x9d, 0x21, 0x15, 0x37, 0x8f, 0xba, 0xda, 0x0f, 0x79, 0x58, 0x6d, 0x3f,
	0xdd, 0xc7, 0x81, 0x4b, 0x06, 0xe9, 0xb9, 0x08, 0x72, 0xbe, 0xe5, 0x61, 0xe9, 0x29, 0xd6, 0x9c,
	0x80, 0xc4, 0x56, 0x27, 0x0a, 0x5d, 0x79, 0x5e, 0x9e, 0xc4, 0xd6, 0x59, 0xe8, 0x4e, 0x68, 0xc9,
	0x4e, 0x6a, 0xe1, 0xc9, 0xb8, 0x24, 0x6e, 0x17, 0x87, 0xe5, 0x5c, 0x12, 0x97, 0x58, 0x3c, 0x6e,
	0x98, 0xde, 0xf2, 0x5c, 0x12, 0x37, 0x44, 0x50, 0x03, 0xe6, 0x7d, 0xcc, 0xae, 0x49, 0x78, 0x45,
	0xcb, 0xa0, 0x66, 0xb7, 0x16, 0x6b, 0x1f, 0xe8, 0xc9, 0x75, 0xeb, 0x13, 0x7a, 0xf5, 0x67, 0xd2,
	0xef, 0xc0, 0x67, 0xe1, 0xc0, 0xbc, 0x09, 0x43, 0x8d, 0x44, 0x1a, 0x65, 0x24, 0xc4, 0xb4, 0xbc,
	0xa8, 0x2a, 0x5b, 0x8b, 0xb5, 0xf7, 0xee, 0x22, 0xd9, 0x4f, 0x3d, 0xcd, 0x91, 0x20, 0x74, 0x0e,
	0xc8, 0x26, 0x5e, 0x10, 0x31, 0x1c, 0x76, 0x42, 0x4c, 0x49, 0x14, 0xda, 0x98, 0x96, 0x97, 0x04,
	0xd5, 0xfd, 0xbb, 0xa8, 0x1e, 0xcb, 0x08, 0x33, 0x0d, 0x30, 0xd7, 0xec, 0x49, 0xa8, 0xf2, 0x08,
	0x96, 0xc7, 0x74, 0xa3, 0x22, 0x64, 0xaf, 0xf0, 0x40, 0x26, 0x9d, 0x2f, 0xd1, 0x9b, 0x30, 0x17,
	0x5b, 0x6e, 0x94, 0x3e, 0x95, 0xc4, 0xa8, 0x67, 0x3e, 0x55, 0x2a, 0xbf, 0x28, 0xb0, 0x70, 0x23,
	0x18, 0xd5, 0x21, 0xc7, 0x06, 0x41, 0x72, 0x5f, 0x2b, 0xb5, 0x0f, 0x67, 0x7e, 0xa1, 0xde, 0x1a,
	0x04, 0xd8, 0x14, 0x31, 0xfc, 0x0c, 0x7e, 0xbf, 0xb4, 0x9c, 0x51, 0xb3, 0xfc, 0x0c, 0x61, 0x68,
	0x9f, 0x43, 0x8e, 0xfb, 0xa0, 0x22, 0x2c, 0xb5, 0xbe, 0x6a, 0x1e, 0x74, 0x8e, 0x9e, 0xb5, 0x1b,
	0xc7, 0x47, 0xfb, 0xc5, 0x37, 0x6e, 0x90, 0xc7, 0xc7, 0x67, 0xa7, 0xad, 0x03, 0xb3, 0xa8, 0x20,
	0x04, 0x2b, 0x02, 0xd9, 0x6f, 0xb4, 0x1a, 0xa7, 0xad, 0x13, 0xf3, 0xa0, 0x98, 0xa9, 0xfc, 0xa1,
	0xc0, 0xda, 0x54, 0x16, 0xd0, 0xde, 0x98, 0x4e, 0xfd, 0x7f, 0xa7, 0x6f, 0x54, 0x2f, 0x82, 0x5c,
	0x60, 0xb1, 0xbe, 0x4c, 0x89, 0x58, 0x6b, 0x5f, 0xdc, 0xa9, 0x76, 0x19, 0x16, 0x04, 0x72, 0x78,
	0x72, 0xda, 0x2a, 0x2a, 0x53, 0xe2, 0x33, 0x68, 0x11, 0x0a, 0x02, 0x31, 0x9b, 0xc5, 0xac, 0xf6,
	0x11, 0x14, 0x87, 0x5a, 0x66, 0x15, 0xce, 0x6b, 0x85, 0x17, 0x59, 0x93, 0x5c, 0x73, 0xa1, 0x33,
	0xea, 0xf5, 0x39, 0x6c, 0xc4, 0x5e, 0x27, 0xe0, 0xbe, 0x9d, 0x30, 0x71, 0xee, 0x5c, 0x90, 0xee,
	0x40, 0x7c, 0xc5, 0xd8, 0x43, 0x1a, 0xe5, 0x9b, 0x30, 0xf7, 0x48, 0x77, 0x60, 0xa2, 0xd8, 0x9b,
	0xc4, 0x2a, 0x4f, 0x00, 0x4d, 0x7b, 0xf2, 0x8b, 0xa5, 0xcc, 0x62, 0x69, 0x15, 0x27, 0xc6, 0xcc,
	0xce, 0xb1, 0xcd, 0xbb, 0x81, 0xe4, 0x9a, 0x95, 0x01, 0x97, 0xf7, 0xab, 0x63, 0x87, 0xb2, 0xf4,
	0xfb, 0xc7, 0xc9, 0x95, 0xff, 0x68, 0x05, 0x99, 0xb1, 0x56, 0xf0, 0x3e, 0x2c, 0xa7, 0xb5, 0xd5,
	0x09, 0x08, 0x71, 0x65, 0x17, 0x59, 0x4a, 0xc1, 0x26, 0x21, 0x6e, 0xd2, 0xd3, 0x92, 0xd3, 0x66,
	0x09, 0x7b, 0x00, 0x6b, 0x2d, 0x8b, 0x5e, 0x9d, 0x32, 0x8b, 0x45, 0x74, 0xe4, 0x72, 0x6e, 0xf7,
	0xbe, 0x06, 0x34, 0xea, 0x3d, 0xec, 0xe1, 0x54, 0x20, 0xa9, 0x77, 0x62, 0xa1, 0x32, 0x14, 0x3c,
	0x4c, 0xa9, 0xd5, 0x4b, 0xab, 0x32, 0x35, 0x91, 0x01, 0xf9, 0x10, 0xd3, 0xc8, 0x65, 0x42, 0xfe,
	0x62, 0xad, 0xa4, 0x27, 0x73, 0x47, 0x4f, 0xe7, 0x8e, 0x7e, 0x2a, 0xe6, 0x8e, 0x29, 0xdd, 0x6a,
	0xbf, 0xe6, 0x60, 0xfe, 0x09, 0x9f, 0x68, 0x8d, 0xe6, 0x11, 0x3a, 0x86, 0x82, 0x1c, 0x23, 0x68,
	0x33, 0x7d, 0x0e, 0xe3, 0x93, 0xa6, 0x52, 0x9a, 0xc2, 0x13, 0xad, 0x5a, 0xf1, 0xfb, 0xd7, 0x7f,
	0xff, 0x94, 0x01, 0x34, 0x6f, 0xc4, 0x55, 0xc3, 0xe1, 0x14, 0xdf, 0x00, 0x0c, 0xbf, 0x09, 0xdd,
	0x4b, 0x03, 0xa7, 0xb2, 0x52, 0xa9, 0xdc, 0xb6, 0x25, 0x69, 0xdf, 0x12, 0xb4, 0x1b, 0x68, 0x9d,
	0xd3, 0xf2, 0x64, 0x51, 0xe3, 0xa5, 0x4c, 0xe1, 0x2b, 0x74, 0x08, 0xf9, 0xe4, 0x3a, 0xd0, 0xc6,
	0xf0, 0xf5, 0x8e, 0x3c, 0x86, 0xca, 0xe6, 0x24, 0x2c, 0x59, 0x57, 0x05, 0xeb, 0x02, 0x2a, 0x70,
	0xd6, 0xd8, 0xa3, 0xe8, 0x4b, 0x98, 0x4f, 0xab, 0x0e, 0x95, 0xee, 0xe8, 0x09, 0x95, 0xf2, 0xf4,
	0x86, 0xe4, 0x43, 0x82, 0x6f, 0x49, 0x4b, 0xf9, 0xea, 0xca, 0x36, 0x32, 0xb9, 0x38, 0x91, 0xcb,
	0x11, 0x71, 0xa3, 0xa9, 0xdc, 0x9c, 0x84, 0x25, 0xd9, 0x3d, 0x41, 0xb6, 0x8e, 0xd6, 0x24, 0x99,
	0xf1, 0x52, 0x16, 0xf4, 0x2b, 0x14, 0x42, 0x41, 0x56, 0x06, 0xda, 0xbc, 0xbd, 0x5e, 0x2b, 0xa5,
	0x29, 0x5c, 0xd2, 0x7e, 0x22, 0x68, 0x77, 0x6a, 0xa5, 0x29, 0x5a, 0x43, 0x34, 0x85, 0xfa, 0xed,
	0xed, 0x61, 0xef, 0x1f, 0xe5, 0xc7, 0xc6, 0x9f, 0x0a, 0x3a, 0x81, 0x65, 0xf1, 0x4e, 0x54, 0x8a,
	0xc3, 0xd8, 0xb1, 0xb1, 0xf6, 0x19, 0xac, 0xb7, 0x07, 0x96, 0xdd, 0xc7, 0xd4, 0xb5, 0x62, 0xb5,
	0x85, 0xc3, 0x6e, 0xe4, 0x93, 0x18, 0x69, 0x7d, 0xc6, 0x02, 0x5a, 0x37, 0x8c, 0x9e, 0xc3, 0xfa,
	0xd1, 0x85, 0x6e, 0x13, 0xcf, 0x88, 0x99, 0xdc, 0x4d, 0xfe, 0x3c, 0xd5, 0xb2, 0x55, 0x7d, 0x67,
	0x5b, 0x51, 0x6a, 0x45, 0x2b, 0x08, 0x5c, 0xc7, 0x16, 0xb3, 0xd6, 0x78, 0x41, 0x89, 0x5f, 0x9f,
	0x42, 0xcc, 0x47, 0x90, 0xdd, 0xdd, 0xd9, 0x45, 0xbb, 0xb0, 0x6d, 0x62, 0x16, 0x85, 0x3e, 0xee,
	0xaa, 0xd7, 0x7d, 0xec, 0xab, 0xac, 0x8f, 0xd5, 0xb4, 0x36, 0xd5, 0x2e, 0xc1, 0x54, 0xf5, 0x09,
	0x53, 0xf1, 0x77, 0x0e, 0x65, 0x3a, 0xca, 0x43, 0xee, 0xe7, 0x8c, 0x52, 0x00, 0xb0, 0x89, 0x27,
	0xf3, 0xb1, 0x97, 0xc8, 0x6f, 0x04, 0x4e, 0x93, 0x97, 0x42, 0x53, 0xf9, 0x7a, 0xce, 0x0a, 0x9c,
	0xb8, 0xfa, 0x5b, 0x26, 0xdb, 0x38, 0x3f, 0xff, 0x3d, 0x93, 0x6f, 0x04, 0x8e, 0xde, 0xae, 0xfe,
	0x25, 0x16, 0xcf, 0xdb, 0xd5, 0x8b, 0xbc, 0x28, 0x99, 0x8f, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff,
	0x50, 0xe1, 0xdc, 0x5c, 0xf4, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JannaAPIClient is the client API for JannaAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JannaAPIClient interface {
	// Get the application build information.
	AppInfo(ctx context.Context, in *AppInfoRequest, opts ...grpc.CallOption) (*AppInfoResponse, error)
	// Get a task status.
	TaskStatus(ctx context.Context, in *TaskStatusRequest, opts ...grpc.CallOption) (*TaskStatusResponse, error)
	// Virtual Machines list.
	VMList(ctx context.Context, in *VMListRequest, opts ...grpc.CallOption) (*VMListResponse, error)
	// Deploy Virtual Machine.
	VMDeploy(ctx context.Context, in *VMDeployRequest, opts ...grpc.CallOption) (*VMDeployResponse, error)
	// Get a Virtual Machine information by its UUID.
	VMInfo(ctx context.Context, in *VMInfoRequest, opts ...grpc.CallOption) (*VMInfoResponse, error)
	// Change Virtual Machine power state.
	VMPower(ctx context.Context, in *VMPowerRequest, opts ...grpc.CallOption) (*VMPowerResponse, error)
}

type jannaAPIClient struct {
	cc *grpc.ClientConn
}

func NewJannaAPIClient(cc *grpc.ClientConn) JannaAPIClient {
	return &jannaAPIClient{cc}
}

func (c *jannaAPIClient) AppInfo(ctx context.Context, in *AppInfoRequest, opts ...grpc.CallOption) (*AppInfoResponse, error) {
	out := new(AppInfoResponse)
	err := c.cc.Invoke(ctx, "/api.v1.JannaAPI/AppInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jannaAPIClient) TaskStatus(ctx context.Context, in *TaskStatusRequest, opts ...grpc.CallOption) (*TaskStatusResponse, error) {
	out := new(TaskStatusResponse)
	err := c.cc.Invoke(ctx, "/api.v1.JannaAPI/TaskStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jannaAPIClient) VMList(ctx context.Context, in *VMListRequest, opts ...grpc.CallOption) (*VMListResponse, error) {
	out := new(VMListResponse)
	err := c.cc.Invoke(ctx, "/api.v1.JannaAPI/VMList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jannaAPIClient) VMDeploy(ctx context.Context, in *VMDeployRequest, opts ...grpc.CallOption) (*VMDeployResponse, error) {
	out := new(VMDeployResponse)
	err := c.cc.Invoke(ctx, "/api.v1.JannaAPI/VMDeploy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jannaAPIClient) VMInfo(ctx context.Context, in *VMInfoRequest, opts ...grpc.CallOption) (*VMInfoResponse, error) {
	out := new(VMInfoResponse)
	err := c.cc.Invoke(ctx, "/api.v1.JannaAPI/VMInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jannaAPIClient) VMPower(ctx context.Context, in *VMPowerRequest, opts ...grpc.CallOption) (*VMPowerResponse, error) {
	out := new(VMPowerResponse)
	err := c.cc.Invoke(ctx, "/api.v1.JannaAPI/VMPower", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JannaAPIServer is the server API for JannaAPI service.
type JannaAPIServer interface {
	// Get the application build information.
	AppInfo(context.Context, *AppInfoRequest) (*AppInfoResponse, error)
	// Get a task status.
	TaskStatus(context.Context, *TaskStatusRequest) (*TaskStatusResponse, error)
	// Virtual Machines list.
	VMList(context.Context, *VMListRequest) (*VMListResponse, error)
	// Deploy Virtual Machine.
	VMDeploy(context.Context, *VMDeployRequest) (*VMDeployResponse, error)
	// Get a Virtual Machine information by its UUID.
	VMInfo(context.Context, *VMInfoRequest) (*VMInfoResponse, error)
	// Change Virtual Machine power state.
	VMPower(context.Context, *VMPowerRequest) (*VMPowerResponse, error)
}

func RegisterJannaAPIServer(s *grpc.Server, srv JannaAPIServer) {
	s.RegisterService(&_JannaAPI_serviceDesc, srv)
}

func _JannaAPI_AppInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AppInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JannaAPIServer).AppInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.JannaAPI/AppInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JannaAPIServer).AppInfo(ctx, req.(*AppInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JannaAPI_TaskStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TaskStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JannaAPIServer).TaskStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.JannaAPI/TaskStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JannaAPIServer).TaskStatus(ctx, req.(*TaskStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JannaAPI_VMList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VMListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JannaAPIServer).VMList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.JannaAPI/VMList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JannaAPIServer).VMList(ctx, req.(*VMListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JannaAPI_VMDeploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VMDeployRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JannaAPIServer).VMDeploy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.JannaAPI/VMDeploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JannaAPIServer).VMDeploy(ctx, req.(*VMDeployRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JannaAPI_VMInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VMInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JannaAPIServer).VMInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.JannaAPI/VMInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JannaAPIServer).VMInfo(ctx, req.(*VMInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JannaAPI_VMPower_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VMPowerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JannaAPIServer).VMPower(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.v1.JannaAPI/VMPower",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JannaAPIServer).VMPower(ctx, req.(*VMPowerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _JannaAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.v1.JannaAPI",
	HandlerType: (*JannaAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AppInfo",
			Handler:    _JannaAPI_AppInfo_Handler,
		},
		{
			MethodName: "TaskStatus",
			Handler:    _JannaAPI_TaskStatus_Handler,
		},
		{
			MethodName: "VMList",
			Handler:    _JannaAPI_VMList_Handler,
		},
		{
			MethodName: "VMDeploy",
			Handler:    _JannaAPI_VMDeploy_Handler,
		},
		{
			MethodName: "VMInfo",
			Handler:    _JannaAPI_VMInfo_Handler,
		},
		{
			MethodName: "VMPower",
			Handler:    _JannaAPI_VMPower_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/janna_api.proto",
}
